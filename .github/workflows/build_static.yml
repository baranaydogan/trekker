name: Static build

on:
  push:
    branches:
      - buildTest
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc-14
            cpp_compiler: g++-14
            additional_packages: libomp-dev
          - os: macos-latest
            c_compiler: /Users/runner/work/trekker/trekker/llvm/bin/clang-18
            cpp_compiler: /Users/runner/work/trekker/trekker/llvm/bin/clang++-18

    steps:
    - uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref || github.ref_name }}

    - name: Install dependencies (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.compiler_package }} ${{ matrix.additional_packages }}
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 140 --slave /usr/bin/g++ g++ /usr/bin/g++-14

    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v2
      if: startsWith(matrix.os, 'macos')
      with:
        version: "18.1.4"
        cached: true

    - name: Set up build directory
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_ENV"

    - name: Configure CMake (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      shell: bash
      run: |
        cmake -B ${{ env.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_SHARED_LIBS=OFF \
          -DDEFINE_CUDA=OFF \
          -S ${{ github.workspace }}

    - name: Configure CMake (macOS)
      if: startsWith(matrix.os, 'macos')
      shell: bash
      run: |
        cmake -B ${{ env.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_SHARED_LIBS=OFF \
          -DDEFINE_CUDA=OFF \
          -S ${{ github.workspace }}

    - name: Configure CMake (Windows)
      if: startsWith(matrix.os, 'windows')
      shell: bash
      run: |
        cmake -B ${{ env.build-output-dir }} \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -DBUILD_SHARED_LIBS=OFF \
          -DDEFINE_CUDA=OFF \
          -S ${{ github.workspace }}    

    - name: Build
      run: cmake --build ${{ env.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ env.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
